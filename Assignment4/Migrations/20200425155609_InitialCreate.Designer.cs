// <auto-generated />
using Assignment4.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Assignment4.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200425155609_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Assignment4.Models.Categories", b =>
                {
                    b.Property<string>("status")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("status");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Assignment4.Models.Category", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Categoriesstatus")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("sequence")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Categoriesstatus");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Assignment4.Models.Report", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Reportsstatus")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Reportsstatus");

                    b.ToTable("Report");
                });

            modelBuilder.Entity("Assignment4.Models.Reports", b =>
                {
                    b.Property<string>("status")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("status");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("Assignment4.Models.State", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Statesstatus")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Statesstatus");

                    b.ToTable("State");
                });

            modelBuilder.Entity("Assignment4.Models.States", b =>
                {
                    b.Property<string>("status")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("status");

                    b.ToTable("States");
                });

            modelBuilder.Entity("Assignment4.Models.Category", b =>
                {
                    b.HasOne("Assignment4.Models.Categories", null)
                        .WithMany("data")
                        .HasForeignKey("Categoriesstatus");
                });

            modelBuilder.Entity("Assignment4.Models.Report", b =>
                {
                    b.HasOne("Assignment4.Models.Reports", null)
                        .WithMany("data")
                        .HasForeignKey("Reportsstatus");
                });

            modelBuilder.Entity("Assignment4.Models.State", b =>
                {
                    b.HasOne("Assignment4.Models.States", null)
                        .WithMany("data")
                        .HasForeignKey("Statesstatus");
                });
#pragma warning restore 612, 618
        }
    }
}
